MAIN_STATES -> MAIN_STATES MAIN_STATES | DECLARATION 
EXPRESSION -> PRIMITIVE_EXP | PARENTHESES_OPEN EXPRESSION PARENTHESES_CLOSE | EXPRESSION OPERATORS EXPRESSION | WORD PERIOD WORD | WORD PERIOD EXPRESSION
INDEXED_VAR -> WORD SQUARE_OPEN NUM SQUARE_CLOSE | WORD SQUARE_OPEN STRING SQUARE_CLOSE | ARRAY_DECLARATION SQUARE_OPEN NUM SQUARE_CLOSE
IN_STATES -> WORD IN WORD | WORD IN COLLECTION_DECLARATION 
PRIMITIVE_EXP -> BOOLEAN_EXP | FUNC_EXP | WORD | NUM | MINUS NUM | FLOAT | MINUS FLOAT | STRING | NOT PRIMITIVE_EXP | COLLECTION_DECLARATION | NULL 

// Operators
OPERATORS -> ARITHMETIC | LOGICAL | COMPARISON
ARITHMETIC -> PLUS | MINUS | MULTIPLY | DIVIDE | MODULO | POWER
LOGICAL -> && | ||
NOT -> EXCLAMATION
COMPARISON -> GREATER_THAN | LESS_THAN | GREATER_THAN EQ | LESS_THAN EQ | EQ EQ | EQ EQ EQ | EXCLAMATION EQ
ASSIGNMENT -> EQ | PLUS EQ | MINUS EQ | MULTIPLY EQ | DIVIDE EQ | MODULO EQ | POWER EQ

// NUM Types
FLOAT -> NUM PERIOD NUM
NUMBER_TYPES -> NUM | MINUS NUM | FLOAT | MINUS FLOAT

// Array Declaration + States
ARRAY_DECLARATION -> SQUARE_OPEN ARRAY_ELEMENTS SQUARE_CLOSE | SQUARE_OPEN SQUARE_CLOSE
ARRAY_ELEMENTS -> COLLECTION_DECLARATION | EXPRESSION | ARRAY_ELEMENTS COMMA

// JSObject Declaration + States


// Data Types Declaration
COLLECTION_DECLARATION -> ARRAY_DECLARATION
STRING -> SINGLE_QUOTE LONG_WORD SINGLE_QUOTE | DOUBLE_QUOTE LONG_WORD DOUBLE_QUOTE | SINGLE_QUOTE SINGLE_QUOTE | DOUBLE_QUOTE DOUBLE_QUOTE
LONG_WORD -> WORD | WORD LONG_WORD
DECLARATION -> WORD ASSIGNMENT EXPRESSION
BOOLEAN_EXP -> BOOLEAN | IN_STATES | CONDITION

// Conditional Algorithm + States
CONDITION -> PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE | CONDITION LOGICAL CONDITION | CONDITION COMPARISON CONDITION | EXCLAMATION CONDITION | EXPRESSION
IF_STATES -> IF_ALGO | IF_ALGO ELSE_STATES
IF_ALGO -> IF CONDITION CURLY_OPEN MAIN_STATES CURLY_CLOSE
ELSE_STATES -> ELSE CURLY_OPEN MAIN_STATES CURLY_CLOSE | ELSE IF_STATES

// Function Definition + States
FUNC_STATES -> FUNCTION WORD PARAMETER_STATES CURLY_OPEN FUNC_ALGO CURLY_CLOSE
FUNC_ALGO -> MAIN_STATES | MAIN_STATES RETURN_STATES
FUNC_EXP -> WORD ARGUMENT_STATES
RETURN_STATES -> RETURN EXPRESSION | RETURN
ARGUMENT_STATES -> PARENTHSES_OPEN ARGUMENT PARENTHESES_CLOSE | PARENTHESES_OPEN PARENTHESES_CLOSE
ARGUMENT -> ARGUMENT COMMA ARGUMENT | EXPRESSION
PARAMETER_STATES -> PARENTHESES_OPEN PARAMETER PARENTHESES_CLOSE | PARENTHESES_OPEN PARENTHESES_CLOSE
PARAMETER -> PARAMETER COMMA PARAMETER | WORD | WORD EQ EXPRESSION

// Terminal and Non-terminal statements + symbols
PLUS -> +
MINUS -> -
MULTIPLY -> *
DIVIDE -> /
MODULO -> %
POWER -> MULTIPLY MULTIPLY
DELETE -> delete
BOOLEAN -> true | false
NULL -> null

CONSOLE -> console
LOG -> log

IF -> if
ELSE -> else
SWITCH -> switch
CASE -> case
DEFAULT -> default
BREAK -> break
CONTINUE -> continue
TRY -> try
CATCH -> catch
FINALLY -> finally
THROW -> throw
WHILE -> while
FOR -> for
WORD -> word
NUM -> num
IN -> in

VAR -> var
LET -> let
CONST -> const
FUNCTION -> function
REQUIRE -> require
RETURN -> return

COLON -> :
SEMICOLON -> ;
PERIOD -> .
COMMA -> ,
SQUARE_OPEN -> [
SQUARE_CLOSE -> ]
PARENTHESES_OPEN -> (
PARENTHESES_CLOSE -> )
CURLY_OPEN -> {
CURLY_CLOSE -> }
EQ -> =
GREATER_THAN -> >
LESS_THAN -> <
EXCLAMATION -> !
SINGLE_COMMENTS -> //
MULTI_COMMENTS_OPEN -> /*
MULTI_COMMENTS_CLOSE -> */
SINGLE_QUOTE -> '
DOUBLE_QUOTE -> "
